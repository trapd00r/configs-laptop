=pod

=head1 NAME

  rmcd.conf - rmcd configuration file

=head1 ENVIRONMENT

  rmcd.conf should be placed in $XDG_CONFIG_HOME/rmcd/rmcd.conf OR
  /etc/rmcd.conf

  The FIFO is placed in $HOME/.mplayer/rmcd.fifo by default.

  Note that only one process at a time can use the pipe since it'll block, so
  dont use the same pipe as other mplayer instances.
=cut

our $fifo    = "$ENV{HOME}/.mplayer/rmcd.fifo";

=head1 OPTIONS

=head2 Mplayer

=head3 Default options passed to mplayer

  -identify is needed for Mplayer::NowPlaying

  -idle is needed for rmcd to keep waiting when the playlist is empty

  -input file=$fifo is needed for the interprocess communication

=cut
our $player  = 'mplayer';
our @playopt = (
  '-cache', 2000,
  '-min-cache', 200,
  '-quiet',
  'identify',
  '-idle',
  'input', "file=$fifo",
);

=head2 rmcd

=head3 rmcd.conf variables

  $dir_to_copy_to - where files will end up after using the -cp flag
  $custom_np      - a code reference that will be called upon if defined.

=head2 Custom now playing function

If you are streaming music from another box using MPD, you will not get all
metadata since it only sends what is commonly known as ICY INFO. Therefore you
might want to override the builtin now playing functionality in rmcd.

=head3 Custom now playing code reference that uses PIMPD and SSH

  our $custom_np =
    sub {
      my $oneline = shift; # show on one line if dummy args is provided
      my $host    = '192.168.1.111';
      my $user    = 'laleh';
      my $port    = 22; # ssh port

      if($oneline) {
        exec("ssh $user\@$host -p $port '/usr/bin/pimpd -np'");
      }
      else {
        exec("ssh $user\@$host -p $port '/usr/bin/pimpd -i'");
      }
    };

=head2 Custom copying now playing track function

If you are streaming music, the builtin copy function wont do much good.
Therefore you might want to override it. This will be called upon when called
with the --ccp flag.

=head3 Custom copying now playing track function that uses Audio::MPD and SSH

  our $custom_cp = 
    sub {
      my $host = '192.168.1.111';
      my $port = 22;
      my $user = 'laleh';

      my $base_dir   = '/mnt/Music_1'; # for MPD and alike
      my $file = `ssh $user\@$host -p $port \"perl -MAudio::MPD -e 'print Audio::MPD->new->current->file'\"`;
      my $fullpath = "'$base_dir/$file'";
      exec("scp -P $port $user\@$host:$fullpath $dir_to_copy_to");
    };

=cut
our $dir_to_copy_to = "$ENV{HOME}/ToTransfer";
our $custom_np =
  sub {
    my $info_style = '-i'; # full info
    $info_style    = '-np' if(shift(@_)); # single line info
    my $host       = '192.168.1.101';
    my $port       = 19216;
    my $user       = 'scp1';

    exec("ssh $user\@$host -p $port \"perl ~/devel/pimpd/pimpd $info_style\"");
    return(0);
  };

our $custom_cp =
  sub {
    my $host       = '192.168.1.101';
    my $port       = 19216;
    my $user       = 'scp1';
    my $base_dir   = '/mnt/Music_1';
    chomp(my $file = `ssh $user\@$host -p $port \"perl -MAudio::MPD -e 'print Audio::MPD->new->current->file'\"`);
    my $fullpath = "$base_dir/$file";
    $fullpath =~ s/([;<>\*\|`&\$!#\(\)\[\]\{\}:'"])/\\$1/g;
    exec("scp -P $port $user\@$host:$fullpath $dir_to_copy_to");

  };

=head1 RADIO

=head2 Stations

You can configure your own channels in the %channels hash. The syntax is

L<short_channel_name> => { name => 'Fullname', uri => 'http://fulluri.m3u'}
=cut

our %channels = (
  psy       => {
    name => 'Digitally Imported - Psychedelic',
    uri  => 'http://listen.di.fm/public3/goapsy.pls',
  },
  dnb       => {
    name => 'Digitally Imported - Drum and Bass',
    uri  => 'http://listen.di.fm/public3/drumandbass.pls',
  },
  hardcore  => {
    name => 'Digitally Imported - Hardcore',
    uri  => 'http://listen.di.fm/public3/hardcore.pls',
  },
  hardstyle => {
    name => 'Digitally Imported - Hardstyle',
    uri  => 'http://listen.di.fm/public3/hardstyle.pls',
  },
  gabber    => {
    name => 'Digitally Imported - Gabber',
    uri    => 'http://listen.di.fm/public3/gabber.pls',
  },
  psychill  => {
    name => 'Digitally Imported - Psychill',
    uri  => 'http://listen.di.fm/public3/psychill.pls',
  },
  dubstep   => {
    name => 'Digitally Imported - Dubstep',
    uri  => 'http://listen.di.fm/pulic3/dubstep.pls',
  },
  psy2       => {
    name => 'Schizoid - Psychedelic',
    uri  => 'http://schizoid.in/schizoid-psy.pls',
  },
  psy3       => {
    name => 'Psyradio - Progressive',
    uri  => 'http://streamer.psyradio.org:8010/listen.pls',
  },
  psy4       => {
    name => 'Psyradio Full-On',
    uri  => 'http://streamer.psyradio.org:8030/listen.pls',
  },
  psy5       => {
    name => 'Chromomanova - Psychedelic',
    uri  => 'http://85.25.86.69:8000/listen.pls',
  },
  kohina     => {
    name => 'Kohina - Chiptunes',
    uri  => 'http://www.kohina.com/kohinasolanum.m3u',
  },
  keygen     => {
    name => 'Keygen.fm',
    uri  => 'http://stream.keygen-fm.ru:8000/listen.pls',
  },
  sega       => {
    name => 'Radio SEGA',
    uri  => 'http://83.170.109.107:8000/listen.pls',
  },
  rainwave   => {
    name => 'Rainwave - Videogame Music',
    uri  => 'http://stream.gameowls.com:8000/rainwave.ogg',
  },
  gabber2    => {
    name => 'Hardcast Gabber',
    uri  =>'http://www.shoutcast.com/sbin/tunein-station.pls?id=1390',
  },
  gabber3    => {
    name => 'Rotterdam Terror (192kbps)',
    uri  => 'http://www.shoutcast.com/sbin/tunein-station.pls?id=784307',
  },
  moh  => {
    name => 'Masters of Hardcore',
    uri  => 'http://www.hardcoreradio.nl/hr.m3u',
  },
  hardstyle2 => {
    name => 'Hard.fm Hardstyle (192kbps)',
    uri  => 'http://files.hard.fm/192.pls',
  },
  hardstyle3 => {
    name => 'Blackout Hardstyle (320kbps)',
    uri  =>'http://yourno1hitradio.eu:8000/listen.pls',
  },
  '90'      => {
    name => "Hits from the 90's",
    uri  => 'http://www.shoutcast.com/sbin/tunein-station.pls?id=4384&t=.pls',
  },
  dnb2      => {
    name => 'Drum and Bass Radio',
    uri  => 'http://www.dnbradio.com/hi.m3u',
  },
  cvgm      => {
    name => 'cvgm.net - Video Game and Demo Music',
    uri  => 'http://de.cvgm.net/cvgm128.mp3',
  },
  shiva     => {
    name => 'Shiva FM',
    uri  => 'http://192.168.1.101:6666',
  },
);

1;



# vim: set ts=2 ft=perl:
